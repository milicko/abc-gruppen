import abcGruppen.*;
import abcGruppen.designHat.DesignFreelyView;
import org.junit.After;
import org.junit.Test;

import static org.junit.Assert.*;

public class AbcGruppenTest {
    public static final String BASE_URL = "https://www.abcgruppen.se/";
    public static final String TEMPLATE_ERROR = "Price isn't as expected after selecting %s!";
    public static final String TEMPLATE_ERROR_TEXT = "Price isn't as expected after adding text %s!";

    @Test
    public void openForgotPasswordDialog() {

        HomePage homePage = new HomePage();

        homePage.openBrowser(BASE_URL);

        Login login = homePage.goToMyAbc();

        ForgotOrderNumberDialog forgotOrderNumber = login.setOrderNumber("abc123").forgotOrderNumber();

        forgotOrderNumber.setEmail("test@abacgruppen.com").close();
    }

    @Test
    public void failingTest() {
        int hatPrice = 349;

        HomePage homePage = new HomePage();

        homePage.openBrowser(BASE_URL);

        ChooseSchoolDialog chooseSchool = homePage.designHat();
        DesignHatView designHat = chooseSchool.chooseSchoolFromDropDown("Academy of Music and Business Tingsryd").designHat();

        DesignFreelyView designFreely = designHat.designFreely();

        hatPrice = hatPrice + designFreely.next().selectTag("Seger").getPriceForSelectedTag();

        assertEquals(String.format(TEMPLATE_ERROR, "Seger"), hatPrice, designFreely.getPriceFromShoppingCart());

        hatPrice = hatPrice + designFreely.next().selectTag("Strass").getPriceForSelectedTag();
        assertEquals(String.format(TEMPLATE_ERROR, "Strass"), hatPrice, designFreely.getPriceFromShoppingCart());

    }


    @Test
    public void calculateSelectedValues() {
        int hatPrice = 349;
        int expeditionFee = 39;

        HomePage homePage = new HomePage();

        homePage.openBrowser(BASE_URL);

        ChooseSchoolDialog chooseSchool = homePage.designHat();
        DesignHatView designHat = chooseSchool.chooseSchoolFromDropDown("Academy of Music and Business Tingsryd").designHat();

        DesignFreelyView designFreely = designHat.designFreely();

        hatPrice = hatPrice + designFreely.next().selectTag("Seger").getPriceForSelectedTag();

        assertEquals(String.format(TEMPLATE_ERROR, "Seger"), hatPrice, designFreely.getPriceFromShoppingCart());

        designFreely.next();

        hatPrice = hatPrice + designFreely.next().selectTag("Reflex").getPriceForSelectedTag();

        assertEquals(String.format(TEMPLATE_ERROR, "Reflex"), hatPrice, designFreely.getPriceFromShoppingCart());

        hatPrice = hatPrice + designFreely.next().selectTag("Reflex").getPriceForSelectedTag();

        assertEquals(String.format(TEMPLATE_ERROR, "Reflex"), hatPrice, designFreely.getPriceFromShoppingCart());

        hatPrice = hatPrice + designFreely.next().selectTag("Läder").getPriceForSelectedTag();
        assertEquals(String.format(TEMPLATE_ERROR, "Läder"), hatPrice, designFreely.getPriceFromShoppingCart());

        hatPrice = hatPrice + designFreely.next().next().setText("test").getPriceForAddedText();

        assertEquals(String.format(TEMPLATE_ERROR_TEXT, "test"), hatPrice, designFreely.getPriceFromShoppingCart());

        hatPrice = hatPrice + designFreely.next().next().next().next().selectTag("Kreditkortsficka").getPriceForSelectedTag();

        assertEquals(String.format(TEMPLATE_ERROR, "Kreditkortsficka"), hatPrice, designFreely.getPriceFromShoppingCart());

        int sum = designFreely.next().next().next().next().next().next().next().next().next().continuee().goToCheckout().getSumPrice();

        hatPrice = hatPrice + expeditionFee;

        assertEquals("Hat price with expedition fee doesn't match sum from checkout!", hatPrice, sum);
    }


}
